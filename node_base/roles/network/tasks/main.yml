---
- name: Network | Configure system
  tags: network
  block:

  - name: Network | Ensure SSH allowlist is explicitly set
    ansible.builtin.fail:
      msg: "You must explicitly define network_allow_ssh_ipv4. Use ['0.0.0.0/0'] if you want to allow all."
    when:
      - network_allow_ssh_ipv4 | length == 0
      - not network_disable_firewall

  - name: Network | Ensure SSHv6 allowlist is explicitly set
    ansible.builtin.fail:
      msg: "You must explicitly define network_allow_ssh_ipv6. Use ['::/0'] if you want to allow all."
    when:
      - network_allow_ssh_ipv6_support and network_allow_ssh_ipv6 | length == 0
      - not network_disable_firewall

  - name: Network | Get service facts
    ansible.builtin.service_facts:

  - name: Network | UFW config
    when: ansible_facts.services['ufw'] is defined and ansible_facts.services['ufw']['state'] == 'running'
    block:

    # To avoid any conflicts
    - name: Network | Temporarily allow UFW policies
      community.general.ufw:
        state: enabled
        policy: allow

    - name: Network | Reset UFW
      community.general.ufw:
        state: reset

    - name: Network | Disable UFW
      community.general.ufw:
        state: disabled

    - name: Network | Disable UFW systemd service
      ansible.builtin.systemd:
        name: ufw
        enabled: false
        state: stopped
      notify: apply fw


  - name: Network | Remove firewall software
    ansible.builtin.apt:
      name: "{{ firewall_packages }}"
      state: absent
      purge: true
    when: network_disable_firewall or network_firewall_remove_unused_tools
    vars:
      firewall_packages: >-
        {% if network_disable_firewall %}
        - firewalld
        - nftables
        - ufw
        {% else %}
        ufw
        {% endif %}

  - name: Network | Load nftables tasks
    ansible.builtin.include_tasks: nftables.yml
    when:
      - network_firewall_type == 'nftables'
      - not network_disable_firewall

  - name: Network | Load firewalld tasks
    ansible.builtin.include_tasks: firewalld.yml
    when:
      - network_firewall_type == 'firewalld'
      - not network_disable_firewall

  - name: Network | Upload custom sshd config
    ansible.builtin.template:
      src: custom_sshd.conf.j2
      dest: /etc/ssh/sshd_config.d/custom_sshd.conf
      mode: "0644"
      validate: sshd -t -f %s
    notify: restart ssh
