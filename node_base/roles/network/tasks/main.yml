---
- name: Network | Configure system
  tags: network
  block:

  - name: Network | Ensure SSH allowlist is explicitly set
    ansible.builtin.fail:
      msg: "You must explicitly define network_allow_ssh_ipv4. Use ['0.0.0.0/0'] if you want to allow all."
    when: network_allow_ssh_ipv4 | length == 0

  - name: Network | Ensure SSHv6 allowlist is explicitly set
    ansible.builtin.fail:
      msg: "You must explicitly define network_allow_ssh_ipv6. Use ['::/0'] if you want to allow all."
    when: network_allow_ssh_ipv6_support and network_allow_ssh_ipv6 | length == 0

  - name: Network | Create /etc/nftables.d folder
    ansible.builtin.file:
      path: /etc/nftables.d
      state: directory
      mode: "0755"

  - name: Network | Copy nftables.conf
    ansible.builtin.template:
      src: nftables.conf.j2
      dest: /etc/nftables.conf
      mode: "0755"
      validate: nft -c -f %s
    notify: apply nft

  - name: Network | Get service facts
    ansible.builtin.service_facts:

  - name: Network | UFW config
    when: ansible_facts.services['ufw'] is defined and ansible_facts.services['ufw']['state'] == 'running'
    block:

    # To avoid any conflicts
    - name: Network | Temporarily allow UFW policies
      community.general.ufw:
        state: enabled
        policy: allow

    - name: Network | Reset UFW
      community.general.ufw:
        state: reset

    - name: Network | Disable UFW
      community.general.ufw:
        state: disabled

    - name: Network | Disable UFW systemd service
      ansible.builtin.systemd:
        name: ufw
        enabled: false
        state: stopped
      notify: apply nft

    # Activate Nftables already, so the server will not run without a firewall too long
    - meta: flush_handlers


  - name: Network | Upload custom sshd config
    ansible.builtin.template:
      src: custom_sshd.conf.j2
      dest: /etc/ssh/sshd_config.d/custom_sshd.conf
      mode: "0644"
      validate: sshd -t -f %s
    notify: restart ssh
